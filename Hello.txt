This is the projects space folder 

Notes: In this Projects We I'm Using two Hooks Actually i'm replacing exsiting hook to new one hook.
useState() --> useRef()


Here we are using HOoks which methed name starting with 'use' that is hook like
useState(): 'useState()' this return one array who has 2 elements first is for current state and second one is method for the edit current state value. hooks are baisically use for managing state.
e.g: 
here we are using hooks without destructureing
  let textStateArr = useState("Initial Value");
  let textStateVal = textStateArr[0];
  let setTextState = textStateArr[1];

here we are using hooks with destructureing

let [textStateVal, setTextState] = useState("Initial Value");


useRef(): It creats the reffrence of any value and strored in self and when you want you can access those value from useRef with current method. useRef don't need to repaint again the entire thing after changing the value as like useState.
and you can pass the current value of useRef as the props.

e.g: let myValue = useRef("initial value");
     currValue = myValue.current.value;


When react has lots of event to handle and your setTextState method needs to be change so you can use "Functional Updates" inseated of only spread operator. (the reason this that if you using only spread operator then and you value is depends upon any updated value so sometimes react gives you the last value inseated of updated one)



props is just a name ... in the react when pass any arguments to any function then react return the arguments for the function in the form of obj and which is called here 'props'.

Here we pass the  'foodItem={item}' as the arguments (in the attribute defining manner) from the Foods.jsx to item.jsx

props are immutable (default me jaisa mila h waise hi rahega )
We can write the destructure props like props = {foodItem} otherwise use props.foodItem everywhere in the program.


The method 'handleBuyNow here this is the nothing but the behavior of child '
But after commenting this all I added the 'handleBuyButton' in the parent and nowit is a behaviour of child so with the props above two thing are coming first one is foodItem and second one is 'handleBuyButton'


Here we are using HOoks which methed name starting with 'use' that is hook like 'useState()' this return one array who has 2 elements first is for current state and second one is method for the edit current state value. hooks are baisically use for managing state.


here we are using hooks without destructureing
  let textStateArr = useState("Custom Food");
  let textStateVal = textStateArr[0];
  let setTextState = textStateArr[1];